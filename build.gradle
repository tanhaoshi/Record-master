buildscript {
    ext.kotlin_version = '1.4.0'
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

def props = new Properties()
props.load(new FileInputStream("${rootDir}/local.properties"))
props.each { key, val ->
    project.ext.set(key, val)
}

ext {
    appVersionName = '0.6.2'
    appVersionCode = 62
    applicationId = 'com.coderpage.mine'

    minSdkVersion = 18
    targetSdkVersion = 28
    compileSdkVersion = 28
    buildToolsVersion = '27.0.3'
    androidSupportVersion = '27.1.1'
    archVersion = '1.1.1'
    appCompat = "com.android.support:appcompat-v7:${androidSupportVersion}"
    supportV4 = "com.android.support:support-v4:${androidSupportVersion}"
    design = "com.android.support:design:${androidSupportVersion}"
    supportAnnotation = "com.android.support:support-annotations:${androidSupportVersion}"
    cardView = "com.android.support:cardview-v7:${androidSupportVersion}"
    percentLayout = "com.android.support:percent:${androidSupportVersion}"
    eventBus = 'org.greenrobot:eventbus:3.0.0'
    recyclerview = "com.android.support:recyclerview-v7:${androidSupportVersion}"
    constraintLayout = "com.android.support.constraint:constraint-layout:1.1.3"
    archRoomRuntime = "android.arch.persistence.room:runtime:1.0.0"
    archLifecycleExtension = "android.arch.lifecycle:extensions:${archVersion}"
    archViewmodel = "android.arch.lifecycle:viewmodel:${archVersion}"
    archLiveData = "android.arch.lifecycle:livedata:${archVersion}"
    archLifecycleRuntime = "android.arch.lifecycle:runtime:${archVersion}"
    archLifecycleCompiler = "android.arch.lifecycle:compiler:${archVersion}"
    archRoomCompiler = "android.arch.persistence.room:compiler:1.0.0"

    materialCalendarview = "com.prolificinteractive:material-calendarview:1.4.3"
    mpAndroidChart = "com.github.PhilJay:MPAndroidChart:v3.0.2"
    buglyCrashReport = "com.tencent.bugly:crashreport:2.5.0"
    fastjson = "com.alibaba:fastjson:1.1.57.android"
    refreshLayout = 'com.lcodecorex:tkrefreshlayout:1.0.7'
    arounter = "com.alibaba:arouter-api:1.2.2"
    arounterProcessor = "com.alibaba:arouter-compiler:1.2.2"

    retrofit = 'com.squareup.retrofit2:retrofit:2.0.0'
    retrofitConverterGson = 'com.squareup.retrofit2:converter-gson:2.0.0'
    retrofitConverterFastjson = 'org.ligboy.retrofit2:converter-fastjson-android:2.1.0'
    okhttp3InterceptorLogging = 'com.squareup.okhttp3:logging-interceptor:3.2.0'

    testRunner = 'com.android.support.test:runner:0.5'
    testRules = 'com.android.support.test:rules:0.5'
    testEspresso = 'com.android.support.test.espresso:espresso-core:2.2.2'
    testUiautomator = 'com.android.support.test.uiautomator:uiautomator-v18:2.1.2'

    junit = 'junit:junit:4.12'
    robolectric = 'org.robolectric:robolectric:3.0'
    robolectricV4 = 'org.robolectric:shadows-support-v4:3.0'
    mockito = 'org.mockito:mockito-core:1.9.5'
    powerMockito = 'org.powermock:powermock-api-mockito:1.6.4'
    powerMock = 'org.powermock:powermock-module-junit4:1.6.4'
    powerMockRule = 'org.powermock:powermock-module-junit4-rule:1.6.4'
    powerMockXStream = 'org.powermock:powermock-classloading-xstream:1.6.4'
}

allprojects {
    repositories {
        maven { url "https://maven.aliyun.com/nexus/content/groups/public" }
        google()
        jcenter()
        maven { url "https://jitpack.io" }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
